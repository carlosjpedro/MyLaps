@model CorralViewModel
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function selectCriteriaForm(value) {
        switch (value) {
            case "0":
                document.querySelector("#age-criteria-data").style.display = 'none';
                document.querySelector("#time-criteria-data").style.display = 'none';
                document.querySelector("#gender-criteria-data").style.display = 'none';
                break;
            case "1":
                document.querySelector("#age-criteria-data").style.display = 'block';
                document.querySelector("#time-criteria-data").style.display = 'none';
                document.querySelector("#gender-criteria-data").style.display = 'none';
                break;
            case "2":
                document.querySelector("#age-criteria-data").style.display = 'none';
                document.querySelector("#time-criteria-data").style.display = 'block';
                document.querySelector("#gender-criteria-data").style.display = 'none';
                break;
            case "3":
                document.querySelector("#age-criteria-data").style.display = 'none';
                document.querySelector("#time-criteria-data").style.display = 'none';
                document.querySelector("#gender-criteria-data").style.display = 'block';
                break;
            default:
                break;
        }
    }
</script>

<h1>Edit</h1>

@using (Html.BeginForm("Save","Corral" ,FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id);
    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        <div class="col-md-4">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
        @Html.LabelFor(model => model.MaxElements, "Max Runners")
        <div class="col-md-4">
            @Html.EditorFor(model => model.MaxElements, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
        @Html.LabelFor(model => model.StartBIBNumber, "Start BIB")
        <div class="col-md-4">
            @Html.EditorFor(model => model.StartBIBNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
        @Html.LabelFor(model => model.CriteriaType, "Criteria")
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.CriteriaType, Html.GetEnumSelectList(Model.CriteriaType.GetType()), new { @class = "form-control", @onchange = "selectCriteriaForm(this.value)" })
        </div>
    </div>
    <div class="form-group" id="age-criteria-data" style="display: @( Model.CriteriaType == CriteriaTypeViewModel.Age? "block" : "none" )">
        @Html.LabelFor(m => m.MinAge)
        <div class="col-md-4">
            @Html.EditorFor(m => m.MinAge, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.LabelFor(m => m.MaxAge)
        <div class="col-md-4">
            @Html.EditorFor(m => m.MaxAge, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group" id="time-criteria-data" style="display: @( Model.CriteriaType == CriteriaTypeViewModel.RaceTime ? "block" : "none")">
        @Html.LabelFor(m => m.MinRaceTime)
        <div class="col-md-4">
            @Html.EditorFor(m => m.MinRaceTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.LabelFor(m => m.MaxRaceTime)
        <div class="col-md-4">
            @Html.EditorFor(m => m.MaxRaceTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group" id="gender-criteria-data" style="display: @( Model.CriteriaType == CriteriaTypeViewModel.Gender ? "block" : "none")">
        @Html.LabelFor(m => m.Gender)
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.Gender, Html.GetEnumSelectList(Model.Gender.GetType()), new { @class = "form-control" })
        </div>
    </div>

    <input type="submit" value="Save"/>
}





